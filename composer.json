{
    "name": "cakephp/app",
    "description": "CakePHP skeleton app",
    "homepage": "https://cakephp.org",
    "type": "project",
    "license": "MIT",
    "require": {
        "php": ">=8.1",
        "arodu/cakelte": "dev-2.next",
        "arodu/cakelte-tools": "dev-develop",
        "arodu/cakephp-modal-form": "dev-main",
        "arodu/cakephp-query-filter": "dev-develop",
        "cakedc/users": "^11.1",
        "cakephp/cakephp": "^4.5",
        "cakephp/migrations": "^3.2",
        "cakephp/plugin-installer": "^2.0",
        "dompdf/dompdf": "^2.0",
        "friendsofcake/cakepdf": "^4.1",
        "google/recaptcha": "@stable",
        "league/oauth2-facebook": "@stable",
        "league/oauth2-google": "@stable",
        "mobiledetect/mobiledetectlib": "^3.74",
        "muffin/footprint": "^3.0",
        "muffin/trash": "^3.1"
    },
    "require-dev": {
        "cakedc/cakephp-phpstan": "^2.0",
        "cakephp/bake": "^2.6",
        "cakephp/cakephp-codesniffer": "^4.4",
        "cakephp/debug_kit": "^4.5",
        "fakerphp/faker": "^1.20",
        "josegonzalez/dotenv": "^4.0",
        "phpstan/phpstan": "^1.10",
        "phpunit/phpunit": "~8.5.0 || ^9.3",
        "vierge-noire/cakephp-fixture-factories": "^2.5"
    },
    "suggest": {
        "markstory/asset_compress": "An asset compression plugin which provides file concatenation and a flexible filter system for preprocessing and minification.",
        "dereuromark/cakephp-ide-helper": "After baking your code, this keeps your annotations in sync with the code evolving from there on for maximum IDE and PHPStan/Psalm compatibility.",
        "phpstan/phpstan": "PHPStan focuses on finding errors in your code without actually running it. It catches whole classes of bugs even before you write tests for the code.",
        "cakephp/repl": "Console tools for a REPL interface for CakePHP applications."
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/",
            "ModalForm\\": "plugins/ModalForm/src/",
            "System\\": "plugins/System/src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Test\\": "tests/",
            "Cake\\Test\\": "vendor/cakephp/cakephp/tests/",
            "ModalForm\\Test\\": "plugins/ModalForm/tests/",
            "System\\Test\\": "plugins/System/tests/"
        }
    },
    "scripts": {
        "post-install-cmd": [
            "App\\Console\\Installer::postInstall",
            "bin/cake cache clear_all",
            "bin/cake migrations migrate"
        ],
        "post-create-project-cmd": "App\\Console\\Installer::postInstall",
        "check": [
            "@test",
            "@cs-check"
        ],
        "cs-check": "phpcs --colors -p  src/ tests/",
        "cs-fix": "phpcbf --colors -p src/ tests/",
        "stan": "phpstan analyse",
        "test": "phpunit --colors=always",
        "reset-factory": "bin/cake migrations rollback -t 0; bin/cake migrations migrate",
        "reset-factory-faker": "bin/cake migrations rollback -t 0; bin/cake migrations migrate; bin/cake migrations seed --seed TestingSeed",
        "test-coverage": "XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-html webroot/coverage --colors=always"
    },
    "prefer-stable": true,
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "cakephp/plugin-installer": true,
            "dealerdirect/phpcodesniffer-composer-installer": true
        },
        "preferred-install": {
            "arodu/*": "source",
            "cakedc/*": "source",
            "*": "dist"
        }
    }
}
