name: CI

on:
  push:
    branches:
      - "main"
      - "develop"
  pull_request:
    branches:
      - "*"

jobs:
  testsuite:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version: ["8.1"]
        db-type: [mysql]
    name: PHP ${{ matrix.php-version }}
    env:
      DATABASE_URL: "mysql://root:root@127.0.0.1/cakephp?encoding=utf8"
      DATABASE_TEST_URL: "mysql://root:root@127.0.0.1/cakephp?encoding=utf8"
      SECURITY_SALT: "6a08f8b777b68f8a1c3dad9315f54"

    steps:
      - name: Setup MySQL latest
        if: matrix.db-type == 'mysql'
        run: docker run --rm --name=mysqld -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=cakephp -p 3306:3306 -d mysql:8.0 --default-authentication-plugin=mysql_native_password --disable-log-bin

      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, apcu, sqlite, pdo_sqlite, pdo_${{ matrix.db-type }}, ${{ matrix.db-type }}
          coverage: none

      - name: Composer install
        run: |
          cp config/app_local.example.php config/app_local.php
          composer install --prefer-dist --no-interaction

      - name: Run PHPUnit
        run: |
          vendor/bin/phpunit

      - name: Run PHP CodeSniffer
        if: success() || failure()
        run: composer cs-check

      - name: Run phpstan
        if: success() || failure()
        run: composer stan
        continue-on-error: true
